// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// clusterize
SEXP clusterize(NumericVector dist, double tolerance);
RcppExport SEXP supc_clusterize(SEXP distSEXP, SEXP toleranceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type dist(distSEXP);
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    rcpp_result_gen = Rcpp::wrap(clusterize(dist, tolerance));
    return rcpp_result_gen;
END_RCPP
}
// test_dgemm
void test_dgemm(NumericMatrix a, NumericMatrix b, NumericMatrix retval);
RcppExport SEXP supc_test_dgemm(SEXP aSEXP, SEXP bSEXP, SEXP retvalSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type b(bSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type retval(retvalSEXP);
    test_dgemm(a, b, retval);
    return R_NilValue;
END_RCPP
}
// supc1_cpp
NumericMatrix supc1_cpp(NumericMatrix x, double tau, Function RT, double tolerance, Function dist, bool verbose);
RcppExport SEXP supc_supc1_cpp(SEXP xSEXP, SEXP tauSEXP, SEXP RTSEXP, SEXP toleranceSEXP, SEXP distSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< Function >::type RT(RTSEXP);
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< Function >::type dist(distSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(supc1_cpp(x, tau, RT, tolerance, dist, verbose));
    return rcpp_result_gen;
END_RCPP
}
